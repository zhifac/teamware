<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <!-- For mail settings and future properties files -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:local.properties</value>
                <value>classpath:database.properties</value>
            </list>
        </property>
    </bean>


       
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${hibernate.connection.driver_class}"/>
        <property name="url" value="${hibernate.connection.url}"/>
        <property name="username" value="${hibernate.connection.username}"/>
        <property name="password" value="${hibernate.connection.password}"/>
        <property name="maxActive" value="20"/>
        <property name="maxIdle" value="5"/>
        <property name="maxWait" value="120000"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="60"/>
        <property name="testOnBorrow" value="true"/>
        <property name="validationQuery" value="select 1"/>
    </bean>
     <!-- Hibernate SessionFactory -->
 <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
  <property name="lobHandler">  
    <bean class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>  
  </property>
  <property name="dataSource" ref="dataSource"/>
  <property name="mappingResources">
   <list>
    <value>gleam/executive/model/Role.hbm.xml</value>
    <value>gleam/executive/model/User.hbm.xml</value>
    <value>gleam/executive/model/Resource.hbm.xml</value>
    <value>gleam/executive/model/Service.hbm.xml</value>
    <value>gleam/executive/model/Project.hbm.xml</value>
    <value>gleam/executive/model/AnnotationService.hbm.xml</value>
    <value>gleam/executive/model/AnnotationServiceType.hbm.xml</value>
   </list>    
  </property>
  <!-- DB properties -->
  <property name="hibernateProperties">
   <props>
    <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
    <prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
    <prop key="hibernate.max.fetch_depth">2</prop>
    <!-- Create/update the database tables automatically when the JVM starts up
    <prop key="hibernate.hbm2ddl.auto">update</prop> -->
    <!-- Turn batching off for better error messages under PostgreSQL
    <prop key="hibernate.jdbc.batch_size">0</prop> -->
    <prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
    <prop key="hibernate.connection.isolation">2</prop>
    <!--<prop key="hibernate.show_sql">true</prop>-->
   </props>
  </property>


 </bean>
  
 <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
 <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
  <property name="sessionFactory" ref="sessionFactory"/>
 </bean>

 <!-- Generic Dao - can be used when doing standard CRUD -->
 <bean id="dao" class="gleam.executive.dao.hibernate.BaseDaoHibernate">
  <property name="sessionFactory" ref="sessionFactory"/>
 </bean>  <!-- LookupDao: Hibernate implementation -->
 <bean id="lookupDao" class="gleam.executive.dao.hibernate.LookupDaoHibernate">
  <property name="sessionFactory" ref="sessionFactory"/>
 </bean>

 <!-- UserDao: Hibernate implementation -->
 <bean id="userDao" class="gleam.executive.dao.hibernate.UserDaoHibernate">
  <property name="sessionFactory" ref="sessionFactory"/>
 </bean>

 <!-- RoleDao: Hibernate implementation -->
 <bean id="roleDao" class="gleam.executive.dao.hibernate.RoleDaoHibernate">
  <property name="sessionFactory" ref="sessionFactory"/>
 </bean>

 <!-- ResourceDao: Hibernate implementation -->
 <bean id="resourceDao" class="gleam.executive.dao.hibernate.ResourceDaoHibernate">
  <property name="sessionFactory" ref="sessionFactory"/>
 </bean>

 <!-- ServiceDao: Hibernate implementation -->
 <bean id="serviceDao" class="gleam.executive.dao.hibernate.ServiceDaoHibernate">
  <property name="sessionFactory" ref="sessionFactory"/>
 </bean>

 <!-- ProjectDao: Hibernate implementation -->
 <bean id="projectDao" class="gleam.executive.dao.hibernate.ProjectDaoHibernate">
  <property name="sessionFactory" ref="sessionFactory"/>
 </bean>
 
  <!-- AnnotationServiceDao: Hibernate implementation -->
 <bean id="annotationServiceDao" class="gleam.executive.dao.hibernate.AnnotationServiceDaoHibernate">
  <property name="sessionFactory" ref="sessionFactory"/>
 </bean>

 <!-- Webapp bean, used in all modules for access to configurable constants -->
 <bean id="webAppBean" class="gleam.executive.model.WebAppBean">
  <constructor-arg index="0" value="${url.base}" />
  <constructor-arg index="1" value="${private.url.base}" />
  <constructor-arg index="2" value="${webapp.instance.name}" />
  <constructor-arg index="3" value="${annodiffer.url}"/>
  <constructor-arg index="4" value="${instance.name}"/>
  <constructor-arg index="5" value="${plugin.csv.list}"/>
  <constructor-arg index="6" value="${webapp.title}"/>
  <constructor-arg index="7" value="${instance.dir}"/>
 </bean>
</beans>
